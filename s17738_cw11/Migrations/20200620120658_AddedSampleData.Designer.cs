// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using s17738_cw11.Models;

namespace s17738_cw11.Migrations
{
    [DbContext(typeof(S17738DbContext))]
    [Migration("20200620120658_AddedSampleData")]
    partial class AddedSampleData
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("s17738_cw11.Models.Doctor", b =>
                {
                    b.Property<int>("IdDoctor")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.HasKey("IdDoctor");

                    b.ToTable("Doctors");

                    b.HasData(
                        new
                        {
                            IdDoctor = 1,
                            Email = "nowak@ddd.com",
                            FirstName = "Adam",
                            LastName = "Nowak"
                        },
                        new
                        {
                            IdDoctor = 2,
                            Email = "kowalski@ddd.com",
                            FirstName = "Jan",
                            LastName = "Kowalski"
                        },
                        new
                        {
                            IdDoctor = 3,
                            Email = "kasian@ddd.com",
                            FirstName = "Kasia",
                            LastName = "Nowak"
                        });
                });

            modelBuilder.Entity("s17738_cw11.Models.Medicament", b =>
                {
                    b.Property<int>("IdMedicament")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.HasKey("IdMedicament");

                    b.ToTable("Medicaments");

                    b.HasData(
                        new
                        {
                            IdMedicament = 1,
                            Description = "For headache",
                            Name = "Ibuprom",
                            Type = "basic"
                        },
                        new
                        {
                            IdMedicament = 2,
                            Description = "For headache",
                            Name = "Apap",
                            Type = "basic"
                        },
                        new
                        {
                            IdMedicament = 3,
                            Description = "For headache",
                            Name = "Nospa",
                            Type = "basic"
                        });
                });

            modelBuilder.Entity("s17738_cw11.Models.Patient", b =>
                {
                    b.Property<int>("Idpatient")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("Birthdate")
                        .HasColumnType("datetime2");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.HasKey("Idpatient");

                    b.ToTable("Patients");

                    b.HasData(
                        new
                        {
                            Idpatient = 1,
                            Birthdate = new DateTime(2020, 6, 20, 14, 6, 57, 557, DateTimeKind.Local).AddTicks(3600),
                            FirstName = "Marcin",
                            LastName = "Adamczyk"
                        },
                        new
                        {
                            Idpatient = 2,
                            Birthdate = new DateTime(2020, 6, 20, 14, 6, 57, 560, DateTimeKind.Local).AddTicks(9910),
                            FirstName = "Tomasz",
                            LastName = "Malinowski"
                        },
                        new
                        {
                            Idpatient = 3,
                            Birthdate = new DateTime(2020, 6, 20, 14, 6, 57, 561, DateTimeKind.Local).AddTicks(70),
                            FirstName = "Monika",
                            LastName = "Domska"
                        });
                });

            modelBuilder.Entity("s17738_cw11.Models.Prescription", b =>
                {
                    b.Property<int>("IdPrescription")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DueDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("IdDoctor")
                        .HasColumnType("int");

                    b.Property<int>("IdPatient")
                        .HasColumnType("int");

                    b.HasKey("IdPrescription");

                    b.HasIndex("IdDoctor");

                    b.HasIndex("IdPatient");

                    b.ToTable("Prescriptions");

                    b.HasData(
                        new
                        {
                            IdPrescription = 1,
                            Date = new DateTime(2020, 6, 20, 14, 6, 57, 564, DateTimeKind.Local).AddTicks(6460),
                            DueDate = new DateTime(2020, 7, 20, 14, 6, 57, 564, DateTimeKind.Local).AddTicks(7160),
                            IdDoctor = 1,
                            IdPatient = 1
                        },
                        new
                        {
                            IdPrescription = 2,
                            Date = new DateTime(2020, 6, 20, 14, 6, 57, 564, DateTimeKind.Local).AddTicks(9280),
                            DueDate = new DateTime(2020, 7, 20, 14, 6, 57, 564, DateTimeKind.Local).AddTicks(9310),
                            IdDoctor = 2,
                            IdPatient = 2
                        },
                        new
                        {
                            IdPrescription = 3,
                            Date = new DateTime(2020, 6, 20, 14, 6, 57, 564, DateTimeKind.Local).AddTicks(9350),
                            DueDate = new DateTime(2020, 7, 20, 14, 6, 57, 564, DateTimeKind.Local).AddTicks(9350),
                            IdDoctor = 3,
                            IdPatient = 3
                        });
                });

            modelBuilder.Entity("s17738_cw11.Models.PrescriptionMedicament", b =>
                {
                    b.Property<int>("IdPrescription")
                        .HasColumnType("int");

                    b.Property<int>("IdMedicament")
                        .HasColumnType("int");

                    b.Property<string>("Details")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<int?>("Dose")
                        .HasColumnType("int");

                    b.HasKey("IdPrescription", "IdMedicament");

                    b.ToTable("PrescriptionMedicaments");

                    b.HasData(
                        new
                        {
                            IdPrescription = 1,
                            IdMedicament = 1,
                            Details = "none"
                        },
                        new
                        {
                            IdPrescription = 1,
                            IdMedicament = 3,
                            Details = "1x1"
                        },
                        new
                        {
                            IdPrescription = 2,
                            IdMedicament = 1,
                            Details = "2x2"
                        });
                });

            modelBuilder.Entity("s17738_cw11.Models.Prescription", b =>
                {
                    b.HasOne("s17738_cw11.Models.Doctor", "Doctor")
                        .WithMany("Prescriptions")
                        .HasForeignKey("IdDoctor")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("s17738_cw11.Models.Patient", "Patient")
                        .WithMany("Prescriptions")
                        .HasForeignKey("IdPatient")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
